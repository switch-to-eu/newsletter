events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # HTTPS redirect for external HTTP requests (but allow localhost health checks)
        set $redirect_to_https 0;
        if ($http_x_forwarded_proto != "https") {
            set $redirect_to_https 1;
        }
        if ($remote_addr = "127.0.0.1") {
            set $redirect_to_https 0;
        }
        if ($remote_addr = "::1") {
            set $redirect_to_https 0;
        }
        if ($remote_addr ~* "^172\.") {
            set $redirect_to_https 0;
        }
        if ($redirect_to_https = 1) {
            return 301 https://$host$request_uri;
        }

        # Security headers for HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; font-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; script-src 'self'; object-src 'none'; base-uri 'self';" always;

        # Cache static assets
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Main location
        location / {
            try_files $uri $uri/ $uri.html /index.html;
        }

        # Newsletter archive
        location /newsletters/ {
            try_files $uri $uri/ $uri.html =404;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ /(Dockerfile|nginx\.conf|\.dockerignore)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}